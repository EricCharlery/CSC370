import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
interface lexeme
{
  void addCharacter();
  void getCharacter();
  void getFull();
  int lext();
}
enum Tokens 
{ 
  LETTER(0), DIGIT(1), UNKNOWN(99),
    INT_LIT(10), IDENT(11), ASSIGN_OP(20),
    ADD_OP(21), SUB_OP(22), MULT_OP(23),
    DIV_OP(24), LEFT_PAREN(25), RIGHT_PAREN(26), ii(-1);
  int code;
  Tokens(int c) 
  {
    this.code = c;
  }
}
public class Analyzer 
{ 
  int charClass;
  String lexeme;
  char nextChar;
  int lexLen;
  int token;
  int nexttoken;
  public static void main (String[] a) throws IOException 
  {
    Analyzer lexicalAnalyzer = new Analyzer();
    File file = new File("C:/Users/Eric/csc370HW.txt");
    if (file.exists()) 
    {
      try 
      {
        BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
        int ch;
        Tokens token = Tokens.UNKNOWN;
        while ((ch = br.read()) != -1) 
        {
          lexicalAnalyzer.nextChar = (char) ch;
          if (ch == 32) 
